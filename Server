import socket
import selectors
import numpy as np
import pandas as pd
import scipy
from scipy import stats
import json

HOST = "127.0.0.1"
PORT = 5007


df = pd.read_csv('/Users/benjamin/Desktop/Metadatabase.csv', encoding='latin')
df[['budget', 'revenue']] = df[['budget', 'revenue']].apply(pd.to_numeric, errors='coerce')
df = df[df['budget'] > 0]
df = df[df['revenue'] > 0]




def main():
    server = socket.socket()
    server.bind((HOST, PORT))
    server.setblocking(False)
    server.listen(100)
    sel = selectors.DefaultSelector()

    sel.register(server, selectors.EVENT_READ, accept)

    while True:
        for key, mask in sel.select():
            handler = key.data
            handler(key.fileobj, sel)


def accept(server, sel):
    c, addr = server.accept()
    print("Accepted Connection from:{}".format(c))
    c.setblocking(True)
    sel.register(c, selectors.EVENT_READ, requests)


def requests(client, sel):
    try:
        data = client.recv(1024)
        if data:
            data = data.decode()
            if data == "1":
                pass
            elif data == "2":
                genre(client)
            elif data == "close":
                close_connection(client, sel)
            else:
                return "Invalid Command"
    except IOError as err:
        print("There is an error of{}".format(err))
    except OSError as err1:
        print("There is an error of{}".format(err1))


def genre(client):
    print("yes")
    genre = client.recv(1024).decode()
    print("yes")
    for i, row in df.iterrows():
        jsonstring = row[2].replace("'", "\"")
        genre_cat = json.loads(jsonstring)
        movies = []
        for x in genre_cat:
            movies.append(x['name'])
        if genre in movies:
            r, pvalue = scipy.stats.pearsonr(df['budget'], df['revenue'])
            client.send(str(pvalue).encode())


def close_connection(server, sel):
    print("Closing Connection")
    sel.unregister()
    server.close()


if __name__ == '__main__':
    main()
